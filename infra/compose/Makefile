SHELL := /bin/bash
PROJECT := oss-local

.PHONY: help up down logs ps restart clean build rebuild status dev

help: ## Affiche cette aide
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

up: ## D√©marre tous les services
	docker compose -p $(PROJECT) -f docker-compose.yml up -d

dev: ## D√©marre uniquement les services d'infrastructure pour le d√©veloppement (DB, pgAdmin, Mailpit)
	@echo "üöÄ D√©marrage des services d'infrastructure pour le d√©veloppement..."
	docker compose -p $(PROJECT) -f docker-compose.yml up db pgadmin mailpit -d
	@echo ""
	@echo "‚úÖ Services d'infrastructure d√©marr√©s !"
	@echo ""
	@echo "üìã Services disponibles :"
	@echo "   ‚Ä¢ PostgreSQL  : localhost:5432"
	@echo "   ‚Ä¢ pgAdmin     : http://localhost:8081 (admin@example.com / admin)"
	@echo "   ‚Ä¢ Mailpit     : http://localhost:8025"
	@echo ""
	@echo "üèÉ Pour lancer les apps en mode d√©veloppement :"
	@echo "   cd ../../ && pnpm dev"
	@echo ""

down: ## Arr√™te tous les services
	docker compose -p $(PROJECT) -f docker-compose.yml down

logs: ## Affiche les logs en temps r√©el
	docker compose -p $(PROJECT) -f docker-compose.yml logs -f

ps: ## Liste les conteneurs
	docker compose -p $(PROJECT) -f docker-compose.yml ps

restart: ## Red√©marre tous les services
	docker compose -p $(PROJECT) -f docker-compose.yml restart

clean: ## Arr√™te et supprime les volumes
	docker compose -p $(PROJECT) -f docker-compose.yml down -v

build: ## Construit les images
	docker compose -p $(PROJECT) -f docker-compose.yml build

rebuild: ## Reconstruit les images sans cache
	docker compose -p $(PROJECT) -f docker-compose.yml build --no-cache


status: ## Affiche le statut des services
	@echo "=== Statut des services ==="
	@docker compose -p $(PROJECT) -f docker-compose.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
